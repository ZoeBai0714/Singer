{"ast":null,"code":"var _jsxFileName = \"/Users/xuebai/flatiron/Singer/react-sing/src/App.js\";\nimport React from 'react';\nimport SearchBar from './Component/SearchBar';\nimport SongList from './Component/SongList';\nimport Recorder from './Component/Recorder';\nimport Comment from './Component/Comment';\nimport socketIO from 'socket.io-client';\nconst io = socketIO('localhost:3000/');\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      songIds: [],\n      record: false,\n      handle: \"\",\n      comment: \"\",\n      comments: [] // pass videoIds to songList \n\n    };\n\n    this.songList = songIds => {\n      this.setState({\n        songIds: songIds\n      });\n    };\n\n    this.reaction = e => {\n      e.preventDefault();\n      io.emit('comment', {\n        message: e.target.children[2].value,\n        handle: e.target.children[0].value\n      }); //console.log(e.target.children[0].value)\n\n      io.on('comment', messageData => {\n        this.setState({\n          handle: messageData.handle,\n          message: messageData.message\n        }); // this.displayComments()     \n      });\n    };\n\n    this.feedback = () => {\n      //io.emit('typing', ()=>{ })\n      let name = this.state.comments[this.state.comments.length - 1].handle;\n      this.setState({\n        feedback: \"\".concat(name, \" is typing ...\")\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      songList: this.songList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(SongList, {\n      songIds: this.state.songIds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Recorder, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Comment, {\n      reaction: this.reaction,\n      handle: this.state.handle,\n      comment: this.state.comment,\n      displayComments: true,\n      feedback: this.feedback,\n      displayFeedback: this.state.feedback,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;\n/*\n const handleSubmit = (e) =>{\n   e.preventDefault()\n   let request = gapi.client.youtube.search.list({\n     part:\"snippet\",\n     channelId:\"UCwTRjvjVge51X-ILJ4i22ew\",\n     q:e.target.value\n   })\n }\n  const init = () =>{\n   gapi.client.setApiKey(\"AIzaSyBlG_6DX-JMovaElRRI4KqXl_k0KAyHH_0\");\n   gapi.client.load(\"youtube\", \"v3\", function(){\n    })\n}\n */","map":{"version":3,"sources":["/Users/xuebai/flatiron/Singer/react-sing/src/App.js"],"names":["React","SearchBar","SongList","Recorder","Comment","socketIO","io","App","Component","state","songIds","record","handle","comment","comments","songList","setState","reaction","e","preventDefault","emit","message","target","children","value","on","messageData","feedback","name","length","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,MAAMC,EAAE,GAAGD,QAAQ,CAAC,iBAAD,CAAnB;;AAEA,MAAME,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,OAAO,EAAC,EADF;AAENC,MAAAA,MAAM,EAAC,KAFD;AAGNC,MAAAA,MAAM,EAAC,EAHD;AAINC,MAAAA,OAAO,EAAC,EAJF;AAKNC,MAAAA,QAAQ,EAAC,EALH,CAQR;;AARQ,KADwB;;AAAA,SAU/BC,QAV+B,GAUnBL,OAAD,IAAY;AACtB,WAAKM,QAAL,CAAc;AACZN,QAAAA,OAAO,EAACA;AADI,OAAd;AAGD,KAd+B;;AAAA,SAgBhCO,QAhBgC,GAgBpBC,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACAb,MAAAA,EAAE,CAACc,IAAH,CAAQ,SAAR,EAAoB;AACjBC,QAAAA,OAAO,EAAEH,CAAC,CAACI,MAAF,CAASC,QAAT,CAAkB,CAAlB,EAAqBC,KADb;AAEjBZ,QAAAA,MAAM,EAAEM,CAAC,CAACI,MAAF,CAASC,QAAT,CAAkB,CAAlB,EAAqBC;AAFZ,OAApB,EAFgB,CAMhB;;AACClB,MAAAA,EAAE,CAACmB,EAAH,CAAM,SAAN,EAAiBC,WAAW,IAAI;AAC7B,aAAKV,QAAL,CAAc;AACZJ,UAAAA,MAAM,EAAEc,WAAW,CAACd,MADR;AAEZS,UAAAA,OAAO,EAAEK,WAAW,CAACL;AAFT,SAAd,EAD6B,CAK7B;AACF,OAND;AAOF,KA9B+B;;AAAA,SA0ChCM,QA1CgC,GA0CrB,MAAK;AACd;AACA,UAAIC,IAAI,GAAG,KAAKnB,KAAL,CAAWK,QAAX,CAAoB,KAAKL,KAAL,CAAWK,QAAX,CAAoBe,MAApB,GAA4B,CAAhD,EAAmDjB,MAA9D;AACD,WAAKI,QAAL,CAAc;AACZW,QAAAA,QAAQ,YAAKC,IAAL;AADI,OAAd;AAGA,KAhD+B;AAAA;;AAkDhCE,EAAAA,MAAM,GAAE;AACN,WACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAI,KAAKf,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAI,KAAKN,KAAL,CAAWC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,EAGG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,EAIG,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAI,KAAKO,QAA1B;AAAoC,MAAA,MAAM,EAAI,KAAKR,KAAL,CAAWG,MAAzD;AAAiE,MAAA,OAAO,EAAI,KAAKH,KAAL,CAAWI,OAAvF;AAAgG,MAAA,eAAe,MAA/G;AAAgH,MAAA,QAAQ,EAAI,KAAKc,QAAjI;AAA2I,MAAA,eAAe,EAAI,KAAKlB,KAAL,CAAWkB,QAAzK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJH,CADL;AASD;;AA5D+B;;AAgElC,eAAepB,GAAf;AACC","sourcesContent":["import React from 'react';\nimport SearchBar from './Component/SearchBar'\nimport SongList from './Component/SongList'\nimport Recorder from './Component/Recorder'\nimport Comment from './Component/Comment'\nimport socketIO from 'socket.io-client';\nconst io = socketIO('localhost:3000/')\n\nclass App extends React.Component {\n  state = {\n    songIds:[],\n    record:false,\n    handle:\"\",\n    comment:\"\",\n    comments:[]\n  }\n\n  // pass videoIds to songList \n   songList = (songIds) =>{\n    this.setState({\n      songIds:songIds\n    })\n  }\n\n  reaction = (e) => {\n    e.preventDefault()\n    io.emit('comment',  {\n       message: e.target.children[2].value,\n       handle: e.target.children[0].value\n    })\n    //console.log(e.target.children[0].value)\n     io.on('comment', messageData => {\n        this.setState({\n          handle: messageData.handle,\n          message: messageData.message\n        })\n        // this.displayComments()     \n     })\n  }\n   \n  // displayComments = () =>{\n  //   let comments = this.state.comments\n  //       comments.push(messageData)\n  //   this.setState({\n  //      comments: comments\n  //   })\n  //   // let chat = document.getElementById('output')\n  //   // chat.innerHTML += '<p>' + messageData.handle + ':' + messageData.message + '</p>'\n  // }\n\n  feedback = () =>{\n    //io.emit('typing', ()=>{ })\n    let name = this.state.comments[this.state.comments.length -1].handle\n   this.setState({\n     feedback: `${name} is typing ...`\n   })\n  }\n\n  render(){\n    return(\n         <div>\n            <SearchBar songList = {this.songList}/>\n            <SongList songIds = {this.state.songIds}/>\n            <Recorder />\n            <Comment reaction = {this.reaction} handle = {this.state.handle} comment = {this.state.comment} displayComments feedback = {this.feedback} displayFeedback = {this.state.feedback}/>\n         </div>\n        \n    )\n  }\n}\n\n\nexport default App;\n /*\n  const handleSubmit = (e) =>{\n    e.preventDefault()\n    let request = gapi.client.youtube.search.list({\n      part:\"snippet\",\n      channelId:\"UCwTRjvjVge51X-ILJ4i22ew\",\n      q:e.target.value\n    })\n  }\n\n  const init = () =>{\n    gapi.client.setApiKey(\"AIzaSyBlG_6DX-JMovaElRRI4KqXl_k0KAyHH_0\");\n    gapi.client.load(\"youtube\", \"v3\", function(){\n\n    })\n}\n  */"]},"metadata":{},"sourceType":"module"}