{"ast":null,"code":"var _jsxFileName = \"/Users/xuebai/flatiron/Sing/react-sing/src/App.js\";\nimport React from 'react';\nimport SearchBar from './Component/SearchBar';\nimport SongList from './Component/SongList';\nimport { ReactMic } from 'react-mic';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      songIds: [] // pass videoIds to songList \n\n    };\n\n    this.songList = songIds => {\n      this.setState({\n        songIds: songIds\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      songList: this.songList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(SongList, {\n      songIds: this.state.songIds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(ReactMic, {\n      record: boolean // defaults -> false.  Set to true to begin recording\n      ,\n      pause: boolean // defaults -> false.  Available in React-Mic-Plus upgrade only\n      ,\n      className: string // provide css class name\n      ,\n      onStop: this.handleFunction // callback to execute when audio stops recording\n      ,\n      onData: this.handleFunction // callback to execute when chunk of audio data is available\n      ,\n      strokeColor: string // sound wave color\n      ,\n      backgroundColor: string // background color\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;\n/*\n const handleSubmit = (e) =>{\n   e.preventDefault()\n   let request = gapi.client.youtube.search.list({\n     part:\"snippet\",\n     channelId:\"UCwTRjvjVge51X-ILJ4i22ew\",\n     q:e.target.value\n   })\n }\n  const init = () =>{\n   gapi.client.setApiKey(\"AIzaSyBlG_6DX-JMovaElRRI4KqXl_k0KAyHH_0\");\n   gapi.client.load(\"youtube\", \"v3\", function(){\n    })\n}\n */","map":{"version":3,"sources":["/Users/xuebai/flatiron/Sing/react-sing/src/App.js"],"names":["React","SearchBar","SongList","ReactMic","App","Component","state","songIds","songList","setState","render","boolean","string","handleFunction"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,QAAT,QAAyB,WAAzB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,OAAO,EAAC,EADF,CAIR;;AAJQ,KADwB;;AAAA,SAM/BC,QAN+B,GAMnBD,OAAD,IAAY;AACtB,WAAKE,QAAL,CAAc;AACZF,QAAAA,OAAO,EAACA;AADI,OAAd;AAGD,KAV+B;AAAA;;AAchCG,EAAAA,MAAM,GAAE;AACN,WACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAI,KAAKF,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAI,KAAKF,KAAL,CAAWC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,EAGG,oBAAC,QAAD;AACM,MAAA,MAAM,EAAEI,OADd,CAC+B;AAD/B;AAEM,MAAA,KAAK,EAAEA,OAFb,CAE+B;AAF/B;AAGM,MAAA,SAAS,EAAEC,MAHjB,CAG+B;AAH/B;AAIM,MAAA,MAAM,EAAE,KAAKC,cAJnB,CAI0C;AAJ1C;AAKM,MAAA,MAAM,EAAE,KAAKA,cALnB,CAK0C;AAL1C;AAMM,MAAA,WAAW,EAAED,MANnB,CAM+B;AAN/B;AAOM,MAAA,eAAe,EAAEA,MAPvB,CAO+B;AAP/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CADL;AAeD;;AA9B+B;;AAkClC,eAAeR,GAAf;AACC","sourcesContent":["import React from 'react';\nimport SearchBar from './Component/SearchBar'\nimport SongList from './Component/SongList'\nimport { ReactMic } from 'react-mic';\n\nclass App extends React.Component {\n  state = {\n    songIds:[]\n  }\n\n  // pass videoIds to songList \n   songList = (songIds) =>{\n    this.setState({\n      songIds:songIds\n    })\n  }\n\n  \n\n  render(){\n    return(\n         <div>\n            <SearchBar songList = {this.songList}/>\n            <SongList songIds = {this.state.songIds}/>\n            <ReactMic\n                  record={boolean}         // defaults -> false.  Set to true to begin recording\n                  pause={boolean}          // defaults -> false.  Available in React-Mic-Plus upgrade only\n                  className={string}       // provide css class name\n                  onStop={this.handleFunction}        // callback to execute when audio stops recording\n                  onData={this.handleFunction}        // callback to execute when chunk of audio data is available\n                  strokeColor={string}     // sound wave color\n                  backgroundColor={string} // background color\n                />\n         </div>\n    )\n  }\n}\n\n\nexport default App;\n /*\n  const handleSubmit = (e) =>{\n    e.preventDefault()\n    let request = gapi.client.youtube.search.list({\n      part:\"snippet\",\n      channelId:\"UCwTRjvjVge51X-ILJ4i22ew\",\n      q:e.target.value\n    })\n  }\n\n  const init = () =>{\n    gapi.client.setApiKey(\"AIzaSyBlG_6DX-JMovaElRRI4KqXl_k0KAyHH_0\");\n    gapi.client.load(\"youtube\", \"v3\", function(){\n\n    })\n}\n  */"]},"metadata":{},"sourceType":"module"}