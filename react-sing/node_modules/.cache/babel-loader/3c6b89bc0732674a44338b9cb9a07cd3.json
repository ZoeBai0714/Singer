{"ast":null,"code":"var _jsxFileName = \"/Users/xuebai/flatiron/Singer/react-sing/src/Component/Recorder.js\";\nimport React from 'react';\nimport { ReactMic } from 'react-mic'; // import AudioContext from './AudioContext';\n// import AudioPlay from './AudioPlay'\n\nexport default class Recorder extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      record: false\n    };\n\n    this.startRecording = () => {\n      this.setState({\n        record: true\n      });\n      fetch(recordedBlob).then(res => res.arrayBuffer()).then(bufferData => console.log(bufferData));\n    };\n\n    this.stopRecording = () => {\n      this.setState({\n        record: false\n      });\n      console.log('hi');\n    };\n\n    this.onData = recordedBlob => {\n      console.log('chunk of real-time data is: ', recordedBlob);\n    };\n\n    this.onStop = recordedBlob => {\n      console.log('recordedBlob is: ', recordedBlob);\n      this.setState({\n        record: false,\n        blobURL: recordedBlob.blobURL\n      });\n    };\n\n    this.play = () => {\n      console.log('you reached me');\n      const audio = new Audio(this.state.audioSrc);\n      audio.play();\n    };\n  }\n\n  render() {\n    const blobURL = this.state.blobURL;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(ReactMic, {\n      record: this.state.record,\n      className: \"sound-wave\",\n      onStop: this.onStop,\n      strokeColor: \"#000000\",\n      backgroundColor: \"#FF4081\",\n      nonstop: true,\n      duration: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.startRecording,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Start\"), React.createElement(\"button\", {\n      onClick: this.stopRecording,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Stop\"), React.createElement(\"button\", {\n      onClick: this.play,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Play\"), React.createElement(\"article\", {\n      class: \"clip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"audio\", {\n      ref: \"audioSource\",\n      controls: \"controls\",\n      src: blobURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Delete\")));\n  }\n\n}\n/*\n audioURL = window.URL.createObjectURL(blob);\n  audio.src = audioURL;\n*/","map":{"version":3,"sources":["/Users/xuebai/flatiron/Singer/react-sing/src/Component/Recorder.js"],"names":["React","ReactMic","Recorder","Component","state","record","startRecording","setState","fetch","recordedBlob","then","res","arrayBuffer","bufferData","console","log","stopRecording","onData","onStop","blobURL","play","audio","Audio","audioSrc","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,WAAzB,C,CACA;AACA;;AACA,eAAe,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAClDC,KADkD,GAC1C;AACJC,MAAAA,MAAM,EAAE;AADJ,KAD0C;;AAAA,SAKlDC,cALkD,GAKjC,MAAM;AACnB,WAAKC,QAAL,CAAc;AACZF,QAAAA,MAAM,EAAE;AADI,OAAd;AAGAG,MAAAA,KAAK,CAACC,YAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,WAAJ,EADb,EAECF,IAFD,CAEMG,UAAU,IAAIC,OAAO,CAACC,GAAR,CAAYF,UAAZ,CAFpB;AAGD,KAZ+C;;AAAA,SAchDG,aAdgD,GAchC,MAAM;AACpB,WAAKT,QAAL,CAAc;AACZF,QAAAA,MAAM,EAAE;AADI,OAAd;AAGAS,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,KAnB+C;;AAAA,SAqBhDE,MArBgD,GAqBtCR,YAAD,IAAiB;AACxBK,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CN,YAA5C;AACD,KAvB+C;;AAAA,SAyBhDS,MAzBgD,GAyBtCT,YAAD,IAAiB;AACxBK,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCN,YAAjC;AACA,WAAKF,QAAL,CAAc;AACVF,QAAAA,MAAM,EAAC,KADG;AAEVc,QAAAA,OAAO,EAAEV,YAAY,CAACU;AAFZ,OAAd;AAKD,KAhC+C;;AAAA,SAkCjDC,IAlCiD,GAkC1C,MAAK;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,YAAMM,KAAK,GAAG,IAAIC,KAAJ,CAAU,KAAKlB,KAAL,CAAWmB,QAArB,CAAd;AACAF,MAAAA,KAAK,CAACD,IAAN;AACD,KAtCgD;AAAA;;AAwClDI,EAAAA,MAAM,GAAE;AAAA,UACCL,OADD,GACY,KAAKf,KADjB,CACCe,OADD;AAEJ,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAE,KAAKf,KAAL,CAAWC,MAA7B;AAAqC,MAAA,SAAS,EAAC,YAA/C;AAA4D,MAAA,MAAM,EAAE,KAAKa,MAAzE;AACC,MAAA,WAAW,EAAC,SADb;AACuB,MAAA,eAAe,EAAC,SADvC;AACiD,MAAA,OAAO,EAAE,IAD1D;AACgE,MAAA,QAAQ,EAAE,CAD1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAGC;AAAQ,MAAA,OAAO,EAAE,KAAKZ,cAAtB;AAAsC,MAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHD,EAIC;AAAQ,MAAA,OAAO,EAAE,KAAKU,aAAtB;AAAqC,MAAA,IAAI,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJD,EAKC;AAAQ,MAAA,OAAO,EAAE,KAAKI,IAAtB;AAA4B,MAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALD,EAMC;AAAS,MAAA,KAAK,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAO,MAAA,GAAG,EAAG,aAAb;AAA2B,MAAA,QAAQ,EAAG,UAAtC;AAAiD,MAAA,GAAG,EAAID,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,CAND,CADH;AAaH;;AAvDiD;AA0DtD","sourcesContent":["import React from 'react';\nimport { ReactMic } from 'react-mic';\n// import AudioContext from './AudioContext';\n// import AudioPlay from './AudioPlay'\nexport default class Recorder extends React.Component {\n    state = {\n        record: false\n    }\n\n    startRecording = () => {\n        this.setState({\n          record: true\n        });\n        fetch(recordedBlob)\n        .then(res => res.arrayBuffer())\n        .then(bufferData => console.log(bufferData))\n      }\n    \n      stopRecording = () => {\n        this.setState({\n          record: false\n        });\n        console.log('hi')\n      }\n    \n      onData = (recordedBlob)=> {\n        console.log('chunk of real-time data is: ', recordedBlob);\n      }\n    \n      onStop = (recordedBlob)=> {\n        console.log('recordedBlob is: ', recordedBlob);\n        this.setState({\n            record:false,\n            blobURL: recordedBlob.blobURL\n        })\n        \n      }\n      \n     play = () =>{\n       console.log('you reached me')\n       const audio = new Audio(this.state.audioSrc)\n       audio.play()       \n     }\n \n    render(){\n      const {blobURL} = this.state\n        return(\n           <div>\n           <ReactMic record={this.state.record} className=\"sound-wave\" onStop={this.onStop}\n            strokeColor=\"#000000\" backgroundColor=\"#FF4081\" nonstop={true} duration={5} />\n            <button onClick={this.startRecording} type=\"button\">Start</button>\n            <button onClick={this.stopRecording} type=\"button\">Stop</button>\n            <button onClick={this.play} type=\"button\">Play</button>\n            <article class=\"clip\">\n            <audio ref = \"audioSource\" controls = \"controls\" src = {blobURL} ></audio>\n            <button>Delete</button>\n            </article>\n           </div>\n        )\n    }\n}\n\n/*\n audioURL = window.URL.createObjectURL(blob);\n  audio.src = audioURL;\n*/\n"]},"metadata":{},"sourceType":"module"}